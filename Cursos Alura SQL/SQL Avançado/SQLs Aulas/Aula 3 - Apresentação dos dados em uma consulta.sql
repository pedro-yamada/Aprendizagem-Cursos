USE sucos_vendas;

-- Distinct: Retorna so	mente linhas com valores diferentes
SELECT EMBALAGEM, TAMANHO FROM tabela_de_produtos; -- Observe que os dados repetem

SELECT DISTINCT EMBALAGEM, TAMANHO FROM tabela_de_produtos;

SELECT DISTINCT EMBALAGEM, TAMANHO, SABOR FROM tabela_de_produtos
	WHERE SABOR = 'Laranja';
    
-- Atividade
SELECT DISTINCT BAIRRO FROM tabela_de_clientes
	WHERE CIDADE = 'Rio de Janeiro';
    
-- Limit: Limita a saída de linhas exibidas 
SELECT * FROM tabela_de_clientes LIMIT 7; -- 7 Primeiros registros

SELECT * FROM tabela_de_clientes LIMIT 2,3; -- A partir do indice 2 pega 3 

-- Atividade
SELECT * FROM notas_fiscais WHERE DATA_VENDA = '2017-01-01' LIMIT 10;

-- Ordenando a saída de consulta 
SELECT * FROM tabela_de_produtos ORDER BY PRECO_DE_LISTA; -- Por padrão, é ascendente

SELECT * FROM tabela_de_produtos ORDER BY PRECO_DE_LISTA DESC;

SELECT * FROM tabela_de_produtos ORDER BY NOME_DO_PRODUTO;

SELECT * FROM tabela_de_produtos ORDER BY EMBALAGEM, NOME_DO_PRODUTO;

SELECT * FROM tabela_de_produtos ORDER BY TAMANHO DESC, NOME_DO_PRODUTO ASC;

-- Atividade
SELECT CODIGO_DO_PRODUTO FROM tabela_de_produtos 
	WHERE NOME_DO_PRODUTO = 'Linha Refrescante - 1 Litro - Morango/Limão'; -- 1101035
    
SELECT * FROM itens_notas_fiscais 
	WHERE CODIGO_DO_PRODUTO = '1101035'
	ORDER BY QUANTIDADE DESC, PRECO DESC;
        
-- Agrupando os resultados Funções: SUM, MAX, MIN, AVG, COUNT
SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS LIMITE_TOTAL FROM tabela_de_clientes
	GROUP BY ESTADO;
    
SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS MAIOR_PRECO FROM tabela_de_produtos
	GROUP BY EMBALAGEM;
    
SELECT EMBALAGEM, COUNT(PRECO_DE_LISTA) AS CONTADOR FROM tabela_de_produtos
	GROUP BY EMBALAGEM;
    
SELECT ESTADO, BAIRRO, SUM(LIMITE_DE_CREDITO) AS LIMITE_TOTAL FROM tabela_de_clientes
	WHERE CIDADE = 'Rio de Janeiro'
	GROUP BY BAIRRO;
    
SELECT ESTADO, BAIRRO, SUM(LIMITE_DE_CREDITO) AS LIMITE_TOTAL FROM tabela_de_clientes
	GROUP BY ESTADO, BAIRRO
    ORDER BY ESTADO;
    
-- Atividade
SELECT MAX(`QUANTIDADE`) as 'MAIOR QUANTIDADE' FROM itens_notas_fiscais 
	WHERE `CODIGO_DO_PRODUTO` = '1101035'; -- 99
    
SELECT COUNT(*) AS CONTAGEM_DE_ITENS FROM itens_notas_fiscais WHERE codigo_do_produto = '1101035' AND QUANTIDADE = 99;

-- Filtro HAVING Colocado depois do groupby
SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS SOMA_LIMITE FROM tabela_de_clientes
	GROUP BY ESTADO;

SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS SOMA_LIMITE FROM tabela_de_clientes
GROUP BY ESTADO HAVING SUM(LIMITE_DE_CREDITO) > 900000;

SELECT EMBALAGEM , MAX(PRECO_DE_LISTA) AS MAIOR_PRECO, MIN(PRECO_DE_LISTA) AS MENOR_PRECO
FROM tabela_de_produtos GROUP BY EMBALAGEM;

SELECT EMBALAGEM , MAX(PRECO_DE_LISTA) AS MAIOR_PRECO, MIN(PRECO_DE_LISTA) AS MENOR_PRECO
FROM tabela_de_produtos GROUP BY EMBALAGEM
HAVING SUM(PRECO_DE_LISTA) <= 80 AND MAIOR_PRECO > 5;

-- Atividade
SELECT CPF, COUNT(*) AS TOTAL_DE_COMPRAS FROM notas_fiscais
WHERE YEAR(DATA_VENDA) = 2016
GROUP BY CPF HAVING TOTAL_DE_COMPRAS > 2000;

-- Classificar resultados: CASE (tipo if else)
SELECT NOME_DO_PRODUTO, PRECO_DE_LISTA,
CASE 
	WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
	WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
    ELSE 'PRODUTO BARATO'
END AS STATUS_PRECO
FROM tabela_de_produtos;

SELECT EMBALAGEM,
CASE 
	WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
	WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
    ELSE 'PRODUTO BARATO'
END AS STATUS_PRECO, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO
FROM tabela_de_produtos
GROUP BY EMBALAGEM,
CASE
	WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
	WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
    ELSE 'PRODUTO BARATO'
END;

SELECT EMBALAGEM,
CASE 
	WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
	WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
    ELSE 'PRODUTO BARATO'
END AS STATUS_PRECO, AVG(PRECO_DE_LISTA) AS PRECO_MEDIO
FROM tabela_de_produtos
WHERE SABOR = 'Manga'
GROUP BY EMBALAGEM,
CASE
	WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO'
	WHEN PRECO_DE_LISTA >= 7 AND PRECO_DE_LISTA < 12 THEN 'PRODUTO EM CONTA'
    ELSE 'PRODUTO BARATO'
END;

-- Atividade
SELECT NOME, YEAR(DATA_DE_NASCIMENTO) AS DATA_NASCIMENTO,
CASE
	WHEN YEAR(DATA_DE_NASCIMENTO) < 1990 THEN 'VELHO'
    WHEN YEAR(DATA_DE_NASCIMENTO) BETWEEN 1990 AND 1995 THEN 'JOVEM'
    WHEN YEAR(DATA_DE_NASCIMENTO) > 1995 THEN 'CRIANCA'
END AS FAIXA_ETARIA
FROM tabela_de_clientes;