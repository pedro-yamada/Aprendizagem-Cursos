/*Relatório de vendas válidas*/-- _________________________________________________________

SELECT * FROM itens_notas_fiscais;
SELECT * FROM notas_fiscais;

SELECT * FROM notas_fiscais NF
INNER JOIN itens_notas_fiscais INF
ON NF.NUMERO = INF.NUMERO;

/* Consulta MAX vendas clientes de clientes por mês */
SELECT 
	CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m') AS MES_ANO,
    SUM(INF.QUANTIDADE) AS QUANTIDADE_VENDAS
FROM notas_fiscais NF
INNER JOIN itens_notas_fiscais INF
ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m');

/* Limite de compra de cliente */
SELECT * FROM tabela_de_clientes TC;

SELECT 
	TC.CPF, TC.NOME, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m') AS MES_ANO,
    SUM(INF.QUANTIDADE) AS QUANTIDADE_VENDAS,  MAX(TC.VOLUME_DE_COMPRA) AS MAX_VOLUME_COMPRAS
FROM notas_fiscais NF
INNER JOIN itens_notas_fiscais INF
ON NF.NUMERO = INF.NUMERO
INNER JOIN tabela_de_clientes TC
ON TC.CPF = NF.CPF
GROUP BY NF.CPF, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m');

SELECT X.CPF, X.NOME, X.MES_ANO, X.QUANTIDADE_VENDAS, X.QUANTIDADE_LIMITE,
X.QUANTIDADE_LIMITE - X.QUANTIDADE_VENDAS AS DIFERENCA,
CASE 
    WHEN (X.QUANTIDADE_LIMITE - X.QUANTIDADE_VENDAS) < 0 THEN 'INVÁLIDA'
    ELSE 'VÁLIDA' 
END AS STATUS_VENDA
FROM (
SELECT NF.CPF, TC.NOME, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m') AS MES_ANO, 
SUM(INF.QUANTIDADE) AS QUANTIDADE_VENDAS , 
MAX(TC.VOLUME_DE_COMPRA) AS QUANTIDADE_LIMITE FROM NOTAS_FISCAIS NF
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON NF.NUMERO = INF.NUMERO
INNER JOIN TABELA_DE_CLIENTES TC 
ON TC.CPF = NF.CPF
GROUP BY NF.CPF, TC.NOME, DATE_FORMAT(NF.DATA_VENDA, '%Y-%m')) X;

/* Relatório de vendas por sabor*/-- _______________________________________
SELECT * FROM tabela_de_produtos;
SELECT * FROM itens_notas_fiscais;
SELECT * FROM notas_fiscais;

SELECT 
	SABOR, 
	VENDA_SABOR.ANO_VENDA,
    VENDA_SABOR.QUANTIDADE_TOTAL,
    ((VENDA_SABOR.QUANTIDADE_TOTAL / VENDA_TOTAL.QUANTIDADE_TOTAL) * 100) AS PERCENTUAL
FROM
	(SELECT
		TP.SABOR, 
		YEAR(NF.DATA_VENDA) AS ANO_VENDA,
		SUM(QUANTIDADE) AS QUANTIDADE_TOTAL
	FROM tabela_de_produtos TP
	INNER JOIN itens_notas_fiscais INF 
		ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
	INNER JOIN notas_fiscais NF
		ON NF.NUMERO = INF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2016
	GROUP BY TP.SABOR, YEAR(NF.DATA_VENDA)
	ORDER BY SUM(QUANTIDADE) DESC) AS VENDA_SABOR
INNER JOIN
	(SELECT
		YEAR(NF.DATA_VENDA) AS ANO_VENDA,
		SUM(QUANTIDADE) AS QUANTIDADE_TOTAL
	FROM tabela_de_produtos TP
	INNER JOIN itens_notas_fiscais INF 
		ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
	INNER JOIN notas_fiscais NF
		ON NF.NUMERO = INF.NUMERO
	WHERE YEAR(NF.DATA_VENDA) = 2016
	GROUP BY YEAR(NF.DATA_VENDA)) AS VENDA_TOTAL
ON VENDA_SABOR.ANO_VENDA = VENDA_TOTAL.ANO_VENDA
ORDER BY VENDA_SABOR.QUANTIDADE_TOTAL DESC;

-- EXERCICIO
SELECT VENDA_TAMANHO.TAMANHO, VENDA_TAMANHO.ANO, VENDA_TAMANHO.QUANTIDADE,
ROUND((VENDA_TAMANHO.QUANTIDADE/VENDA_TOTAL.QUANTIDADE) * 100, 2) AS PARTICIPACAO FROM 
(SELECT TP.TAMANHO, YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM 
TABELA_DE_PRODUTOS TP 
INNER JOIN ITENS_NOTAS_FISCAIS INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
INNER JOIN NOTAS_FISCAIS NF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2016
GROUP BY TP.TAMANHO, YEAR(NF.DATA_VENDA)) AS VENDA_TAMANHO
INNER JOIN 
(SELECT YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS QUANTIDADE FROM 
TABELA_DE_PRODUTOS TP 
INNER JOIN ITENS_NOTAS_FISCAIS INF ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
INNER JOIN NOTAS_FISCAIS NF ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2016
GROUP BY YEAR(NF.DATA_VENDA)) AS VENDA_TOTAL
ON VENDA_TAMANHO.ANO = VENDA_TOTAL.ANO
ORDER BY VENDA_TAMANHO.QUANTIDADE DESC;

